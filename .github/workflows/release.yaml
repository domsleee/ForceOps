name: release
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
jobs:
  release:
    name: ${{ matrix.target }}
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Get version
        id: get_version
        uses: KageKirin/get-csproj-version@v1.0.0
        with:
          file: Directory.Build.props

      - name: Install Dotnet
        uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a
        with:
          dotnet-version: "7.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_TOKEN }}

      - name: Dotnet Installation Info
        run: dotnet --info

      - name: Build Deps
        run: |
          cd subrepos/LockCheck;
          dotnet build -c release

      - name: Pack
        run: dotnet pack -c release

      - name: Create release
        # if: ${{ github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'chore(release)') }}
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            *.deb
            *.tar.gz
            *.zip
          name: ${{ steps.get_version.outputs.version  }}
          tag_name: ""

      - name: Publish NuGet
        # if: ${{ github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'chore(release)') }}
        if: false
        run: dotnet nuget push ./ForceOps/nupkg/*.nupkg ./ForceOps.Lib/nupkg/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
